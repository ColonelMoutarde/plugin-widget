
:Author:    Skyline-ch
:Email:     <skyline-ch@play-4-fun.net>
:Date:      29.06.2015
:Revision:  1.195.0

== Intro
Le plugin widget est un plugin un peu particulier, car il ne permet pas de crée des équipements mais de modifier le rendu (affichage) d’une commande, l'objectif de se Plugin c'est donc de premetre de personnaliser simplement la façon d'afficher une valeurs, infos, ou action en fonction de ses goûts et désire.
Depuis la version 1.112 de Jeedom, il est possible de personnaliser les widgets avec des options spécifique (créer par le devloppeur du widget), ont peux donc avoir un widget qui s'affichera différement d'une commande à l'autre.

ainsi ont peux avoir un même widget écris en bleu sur une commande et en vert sur une autre.

.Therminologie
[NOTE]
===============================
Widget et Tuile, a ne pas confondre.
Le widget, c'est la partie qui vas se charger de mettre en forme et afficher une infos ou commande, un widget ne dois s'occuper que d'une seul commande ou infos.
La Tuile, c'est un regroupement de widget pour un module, c'est la zone dans la quelle va s'afficher les divers widgets appliquer au commande et inofs du module.
===============================

[[chapitre-0]]
=== Installation du plugin Widget
.Avant de commancer
[NOTE]
===============================
Il vous faut au préalable créer un compte sur le market Jeedom (https://market.jeedom.fr) puis entrer vos informations de conection (login et mdp) dans les paramètre de votre Jeedom
===============================

Comme pour tout plugin, le plugin Widget s'installe depuis l'interface jeedom, menu "Général"=>"plugin"

image::../images/capture001.png[]

Cliquer sur l'icon vert pour accèder directement au market, dans cette fenetre cliquer sur officiel et dans le champ de recherche mettre "Widget"


image::../images/capture002.png[]


Cliquer sur l'icon du plugin, cela ouvre la fiche du plugin dans la quelle ont trouve plusieurs informations.

image::../images/capture003.png[]


Cliquer sur le bouton "Installer stable", une fois installer Jeedom vous demade si vous souhaiter aller à la page de configuration du plugin, répondre oui.
Sur la page de configuration du plugin widget, nous n'avons pour se plugin qu'une seule option activer ou désactiver.
Par défaut se dernier est désactiver, je vous invite donc a cliquer sur le bouton vert "activer".
Dés à présent le plugin est actif et opérationnel.



[[chapitre-1]]
=== Présentation et fonction de base du Plugin Widget
Affin de se rendre dans le plugin Widget, il faut aller dans le menu "Plugin"=>"Programmation"=>"Widget"
.Menu plugin
image::../images/capture005.png[]

Ont se trouve donc sur la page principale du plugin, se dernier dipose par défaut d'un éventail de widget des sont installation, il est possible d'en télécharger d'autre via le market ou de créer ses propres Widget (voir plus bas)
.Présentation de la page principal Widget
image::../images/capture006.png[]


[[chapitre-2]]
=== Accèder aux options de personnalisation des widgets


 
image::../images/widget_screenshot1.JPG[]

Sur la droite on ajoute un nouveau widget, sur la gauche on peut définir la version pour laquelle le widget est fait (dashboard ou mobile), le type (action ou info) et le sous-type. Tout à gauche on a le résultat et en-dessous le code à proprement parlé (html/CSS et JS).

Le principe pour le code du widget est relativement simple ça marche par remplacement de “tag” lors de la génération du widget, voici la liste des “tags” :

Ensuite pour affecter un widget à une commande, on peut passer par la page Général –> Affichage sinon il existe un système pour affecter les widgets dans le plugin widget :

- Info
* \#id# => ID de la commande
* \#logicalId# => ID logique de la commande (peut être vide)
* \#name# => Nom de la commande
* \#name_display# => Nom de la commande avec retour à la ligne et vide si le nom de la commande ne doit pas être affiché
* \#unite# => Unité de la commande
* \#collectDate# => Date exacte ou de la valeur de la commande
* \#state# => Valeur de la commande 
** Si la commande est binaire l'état peut être "green" ou "red"
* \#displayHistory# => Si la commande est historisée alors la valeur est de '' sinon 'display : none;'
* \#averageHistoryValue# => Valeur moyenne sur les x dernières heures de la commande
* \#minHistoryValue# => Minimum sur les x dernières heures de la commande
* \#maxHistoryValue# => Maximum sur les x dernières heures de la commande
* \#tendance# => Tendance soit 'fa fa-minus', 'fa fa-arrow-up' ou 'fa fa-arrow-down'
* \#minValue# => Valeur minimum que peut prendre la commande
* \#maxValue# => Valeur maximum que peut prendre la commande
* \#history# => si la commande est historisée historize vaudra : 'history cursor' et le widget 'jeedom.cmd.info.history.default' sera ajouté (pour permettre d'afficher l'historique)

- Action
* \#id# => ID de la commande
* \#logicalId# => ID logique de la commande (peut être vide)
* \#name# => Nom de la commande
* \#valueName# => Nom de la commande info, si la commande action est liée à une commande info
* \#lastValue# => Dernière valeur de la commande (peut être vide)
* \#minValue# => Valeur minimum que peut prendre la commande
* \#maxValue# => Valeur maximum que peut prendre la commande
* Pour que l'action soit exécutée il faut appeler la fonction : jeedom.cmd.execute(ID,options) avec
** ID => ID de la commande
** options => objet contenant les options de la commande

** Exemple pour une commande de type slider :
    jeedom.cmd.execute({id :'#id#', value : {slider : 30}})

** Exemple pour une commande de type color :
     jeedom.cmd.execute({id :'#id#', { color: '#000000'}})

Voilà ce plugin permet de modifier facilement le rendu des commandes pour pouvoir configurer son tableau de bord exactement comme on le souhaite.
