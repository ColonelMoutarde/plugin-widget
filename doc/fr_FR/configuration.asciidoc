
:Author:    Skyline-ch
:Email:     <skyline-ch@play-4-fun.net>
:Date:      29.06.2015
:Revision:  1.195.0

== Intro
Le plugin widget est un plugin un peu particulier, car il ne permet pas de crée des équipements mais de modifier le rendu (affichage) d’une commande, l'objectif de se Plugin c'est donc de premetre de personnaliser simplement la façon d'afficher une valeurs, infos, ou action en fonction de ses goûts et désire.

Depuis la version 1.112 de Jeedom, il est possible de personnaliser les widgets avec des options spécifique (créer par le devloppeur du widget), ont peux donc avoir un widget qui s'affichera différement d'une commande à l'autre.

ainsi ont peux avoir un même widget écris en bleu sur une commande et en vert sur une autre.


.Therminologie
[NOTE]
===============================
Widget et Tuile, à ne pas confondre.

Le widget, c'est la partie qui vas se charger de mettre en forme et afficher une infos ou commande, un widget ne dois s'occuper que d'une seul commande ou infos.

La Tuile, c'est un regroupement de widget pour un module, c'est la zone dans la quelle va s'afficher les divers widgets appliquer au commande et inofs du module.
===============================




== Installation du plugin Widget
.Avant de commancer
[NOTE]
===============================
Il vous faut au préalable créer un compte sur le market Jeedom (https://market.jeedom.fr) puis entrer vos informations de conection (login et mdp) dans les paramètres de votre Jeedom
===============================

Comme pour tout plugin, le plugin Widget s'installe depuis l'interface jeedom, menu "Général"=>"plugin"

image::../images/capture001.png[]

Cliquer sur l'icon vert pour accèder directement au market, dans cette fenetre cliquer sur officiel et dans le champ de recherche mettre "Widget"


image::../images/capture002.png[]


Cliquer sur l'icon du plugin, cela ouvre la fiche du plugin dans la quelle ont trouve plusieurs informations.

image::../images/capture003.png[]


Cliquer sur le bouton "Installer stable", une fois installer Jeedom vous demade si vous souhaiter aller à la page de configuration du plugin, répondre oui.
Sur la page de configuration du plugin widget, nous n'avons pour se plugin qu'une seule option activer ou désactiver.
Par défaut se dernier est désactiver, je vous invite donc a cliquer sur le bouton vert "activer".
Dés à présent le plugin est actif et opérationnel.




== Présentation et fonction de base du Plugin Widget
Affin de se rendre dans le plugin Widget, il faut aller dans le menu "Plugins"=>"Programmation"=>"Widget".

image::../images/capture005.png[]

Ont se trouve donc sur la page principale du plugin, se dernier dipose par défaut d'un éventail de widget des sont installation, il est possible d'en télécharger d'autre via le market ou de créer ses propres Widget (voir plus bas).

image::../images/capture006.png[]

En cliquant sur l'un des widgets de la liste du menu de droite ou de gauche vous allez ouvrir la page de configuration du widget sur la quelle vous pouvez modifier voir un apèrçu du widget, et tout un tas d'infos de configuration comme le code source du widget

image::../images/capture007.png[]

WARNING: Si vous modifier un Widget qui n'ai pas une de vos créations il est préférable de le dupliquer pour éviter de perdre vos modifs si le widget original est mis à jours.

Pour plus d'infos sur la configuration et création de widget voir plus bas.

=== Appliquer le widget sur une commande

Pour appliquer un widget sur une seul commande ou modifier celui appliquer, il vous faut vous rendre sur la page de configuration du module.
Le chemin pour accèder au module divèrge en fonction du type de se dernier, voic quelques exemple :

Pour les modules Z-Wave, "Plugins"=>"Protocole domotique"=>"OpenZwave", puis choisir le module qui a la commande que vous souhaitez modifier

image::../images/capture024.png[]

Sur la page de configuration du module se rendre sur la commande et cliquer sur les roues crantées, dans la nouvelle fenêtre se rendre dans l'onglet "Affichage avancé"

image::../images/capture025.png[]

Vous pouvez ici modifier le widget appliquer pour les ordinateur et mobile avec les listes déroulentes dédier.

image::../images/capture014.png[]


.Filtrage des listes
NOTE: Les listes déroulentes sont auto filtrente, elle ne fournisse que les widget compatible avec le type de commande.

[[ancre-1]]
=== Appliquer le widget sur plusieurs commandes

En cliquant sur le bonton “Appliquer sur des commandes” vous ouvrez une fentre qui liste toutes les commandes compatible avec le type du widget, vous pouvez donc simplement appliquer ou retirer le widget à de nombreuses commande en une seul fois.

image::../images/capture008.png[]

Il suffi de cocher les commandes sur les quelles vous souhaiter appliquer le widget

==== Divers exemple pour 1 même commande
.Widget : badge-transparent
image::../images/capture009.png[]

.Widget : badge
image::../images/capture010.png[]

.Widget : ConsoIMG
image::../images/capture011.png[]



=== Options de personnalisation des widgets
Depuis la version 1.112 de Jeedom, il est possible de personnaliser les widgets avec des options spécifique (créer par le devloppeur du widget) et commune à tout les widget, ont peux donc avoir un widget qui s'affichera différement d'une commande à l'autre.

Ont peux accèder à ses option de 2 façons, soite par l'arbre Domotique qui se trouve dans le menu "Général" => "Arbre Domotique"

image::../images/capture012.png[]

Sur cette page vous trouver tout vos éléments domotique, les Objets, les modules, les commandes.

image::../images/capture013.png[]


Ont peux aussi y accèder depuis la page de configuration des modules.

image::../images/capture015.png[]

==== Ajouter une option personnaliser
Dans l'onglet "Affichage avancé" ont trouve 2 listes déroulentes qui permetent de changer pour la commande le widget utiliser sur un ordinateur et l'autre pour les Mobiles.
Il y as d'autres option pour afficher ou non les noms et stat, forcé le retours à la ligne avant/aprés le widget si il y as plusieurs commande dans un module (retours a la ligne dans la tuile).
Enfin la liste des paramètres optionnels Widget apliquer (la liste disponible se trouve sur le forum ou Wiki)

image::../images/capture014.png[]

.exemple de valeur pour afficher un compteur spésifique
image::../images/capture016.png[]

.exemple 2 de valeur pour afficher un autre compteur
image::../images/capture017.png[]


.Ajout d'option
NOTE: Pour ajouter une option il vous suffi de cliquer sur le bouton "ajouter", de rensegner le nom de l'option avec les bonne minuscule et majuscule, ainsi que la valeur à attribuer à l'option.
Pour trouver les options consulter le forum ou/et le Wiki


=== Configuration avancé
Dans l'onglet "Configuration avancé" vous trouvez 4 thémes d'option de configuration

image::../images/capture018.png[]

==== Calcul et arrondit
Cette partie contien 2 options, la première "Formule de calcul" permet d'effectuer des corections de valeur ou convertion par le bier de calcule.
Pour récupérer la valeur de la commande, il faut utiliser un "TAG Jeedom", ont utilise donc le Tag "\#value\#".

La seconde, "Arrondi" permet de choisir le nombre de chiffre après la virgule souhaiter, 0 étais aucun, 1 un chiffre, ect....

.Sans les options Calcul et arrondit
image::../images/capture021.png[]

.Exemple de corection
image::../images/capture019.png[]

.Résultat après correction
image::../images/capture020.png[]

==== Action sur la valeur
Cette partie permet de réaliser des actions simple en fonction de la valeur de la commande.
Ont peux donc dans la liste déroulente choisir entre valeur "Egale à", "Supérieur à", "Inférieur à" et "Diférent de".
L'option "plus de (min)" permet de temporiser l'action.
La ligne suivante, "Action à faire" donne 2 possibilité, soit le déclanchement d'une commande soite d'un sénario.

image::../images/capture022.png[]

==== Historique
La partie Hisorique permet de modifier le comportement de l'historisation de la valeur de la commande, ont peux donc ici l'activer ou la désactiver.
TIP: Plus il y as de commande historiser plus cela peur rallentire le système, il ne faut donc activer cettte option que sur les commandes pour les quelles vous avez une utililitée d'avoir un historique.

Le mode de lissage, permet de définire comment Jeedom vas enregistrer les valeur et les retrenscrires, sela permet davoir des courbe plus fluide sur tout si le module envoie rarement les infos ou si il envoie souvent des valeurs très diférente.

Ont peux aussi dans l'option qui suit activer une purge automatique de l'historique pour ne pas conserver plus de donnée que besoin.

image::../images/capture023.png[]


==== Autres
#Doc à venir#


=== Création / Modification de widget
Le plugin offre 2 possibilité pour la création de Widget, le mode facile qui permet de faire des widget basic facilement avec un assistent de création, et le mode avancer qui lui permet aussi la modification par la suite de tout les widgets.

.Editeur de widget en mode avancé
NOTE: Le mose avancé apporte une souplesse sans limite toute fois il vous faut avoir quelques connaissence en langage de programmation basique telle que HTML et CSS pour la base et JavaScript pour pouvoir réaliser des chose un peux plus complexe.

==== Mode création facile
Pour réaliser un widget avec l'assistant, il vous suffi de vous rendre dans le plugin : menu "Plugins"=>"Programation"=>"Widget".
A partire de cette page, cliquer sur le bouton "Mode création facile" en haut à gauche

image::../images/capture026.png[]

Sur la nouvelle page, vous pouvez dans la partie de droite, visualiser les icons de base Jeedom, les images que vous avez importer et les packs importer.
sur la partie de gauche, en premier un bouton pour importer des packs ou image, puis 3 boutons pour la création de widget.

image::../images/capture027.png[]

.Les 3 types de widget en mode facile
* Widget On/Off::
 Déstiner au commades bouton pour les on/off 
* Widget Simple Etat:: Déstiner pour les commandes qui ont un retours d'état
* Widget Numérique:: Déstiner pour les commandes qui envoie une valeur numérique (exemple : Température, luminosité ... ect)

===== Exemple avec la création d'un widget d'état
NOTE: Cette exemple reste applicable pour les 2 autres types de création

Cliquer sur le bouton "Widget Simple Etat", ont arrive sur la page de configuration assistée, il faut donné un nom au widget (nom unique), le type d'interfaces, si le widget est destiner au PC (dashboard) ou mobie, puis la bibliotèque à utiliser (Jeedom, Image perso ou packs).

image::../images/capture028.png[]

Puis il vous faut choisir l'icon pour l'Etat 0 et 1, ainsi que la taille de l'icon (valeur en "EM" = % de la taille d'origine de la police du navigateur, 1 = 100%), une fois choisie, en dessous de la zone de configuration, le code source apparêt

WARNING: Ne pas modifier ses informations si vous ne savez pas se que vous fetes.

Il ne reste plus qu'à valider pour finaliser la création du widget, vous serez auromatiquement rediriger sur la page de configuration avanvcé qui vous permet d'appliquer le widget à plusieurs commande (voir le chapitre <<ancre-1,Appliquer le widget sur plusieurs commandes>>)

==== Création / modification en mode avancé
En mode avancer, il faut avoir des connaissance en langage de programmation HTML, CSS et Javascript.




////
image::../images/widget_screenshot1.JPG[]

Sur la droite on ajoute un nouveau widget, sur la gauche on peut définir la version pour laquelle le widget est fait (dashboard ou mobile), le type (action ou info) et le sous-type. Tout à gauche on a le résultat et en-dessous le code à proprement parlé (html/CSS et JS).

Le principe pour le code du widget est relativement simple ça marche par remplacement de “tag” lors de la génération du widget, voici la liste des “tags” :

Ensuite pour affecter un widget à une commande, on peut passer par la page Général –> Affichage sinon il existe un système pour affecter les widgets dans le plugin widget :

- Info
* \#id# => ID de la commande
* \#logicalId# => ID logique de la commande (peut être vide)
* \#name# => Nom de la commande
* \#name_display# => Nom de la commande avec retour à la ligne et vide si le nom de la commande ne doit pas être affiché
* \#unite# => Unité de la commande
* \#collectDate# => Date exacte ou de la valeur de la commande
* \#state# => Valeur de la commande 
** Si la commande est binaire l'état peut être "green" ou "red"
* \#displayHistory# => Si la commande est historisée alors la valeur est de '' sinon 'display : none;'
* \#averageHistoryValue# => Valeur moyenne sur les x dernières heures de la commande
* \#minHistoryValue# => Minimum sur les x dernières heures de la commande
* \#maxHistoryValue# => Maximum sur les x dernières heures de la commande
* \#tendance# => Tendance soit 'fa fa-minus', 'fa fa-arrow-up' ou 'fa fa-arrow-down'
* \#minValue# => Valeur minimum que peut prendre la commande
* \#maxValue# => Valeur maximum que peut prendre la commande
* \#history# => si la commande est historisée historize vaudra : 'history cursor' et le widget 'jeedom.cmd.info.history.default' sera ajouté (pour permettre d'afficher l'historique)

- Action
* \#id# => ID de la commande
* \#logicalId# => ID logique de la commande (peut être vide)
* \#name# => Nom de la commande
* \#valueName# => Nom de la commande info, si la commande action est liée à une commande info
* \#lastValue# => Dernière valeur de la commande (peut être vide)
* \#minValue# => Valeur minimum que peut prendre la commande
* \#maxValue# => Valeur maximum que peut prendre la commande
* Pour que l'action soit exécutée il faut appeler la fonction : jeedom.cmd.execute(ID,options) avec
** ID => ID de la commande
** options => objet contenant les options de la commande

** Exemple pour une commande de type slider :
    jeedom.cmd.execute({id :'#id#', value : {slider : 30}})

** Exemple pour une commande de type color :
     jeedom.cmd.execute({id :'#id#', { color: '#000000'}})

Voilà ce plugin permet de modifier facilement le rendu des commandes pour pouvoir configurer son tableau de bord exactement comme on le souhaite.
////